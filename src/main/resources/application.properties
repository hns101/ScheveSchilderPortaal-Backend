
# datasource PostgreSQL
spring.sql.init.platform=postgres

spring.datasource.url=jdbc:postgresql://db:5432/scheveschilderportaal
spring.datasource.username=${SPRING_DATASOURCE_USERNAME}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver

# jpa
spring.jpa.database=postgresql
spring.jpa.show-sql=true

# generate schema ddl to create tables
spring.jpa.generate-ddl=true

# --- CRITICAL CHANGE FOR PRODUCTION ---
# 'validate' tells Hibernate to check if the database schema matches the entities, but NEVER to drop or change tables.
# This ensures your data is preserved.
spring.jpa.hibernate.ddl-auto=validate


# --- CRITICAL CHANGE FOR PRODUCTION ---
# 'embedded' ensures that your data.sql script only runs against in-memory databases (for testing),
# and NOT against your persistent PostgreSQL database on every restart.
spring.sql.init.mode=embedded
spring.jpa.defer-datasource-initialization=true

# hibernate
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

spring.output.ansi.enabled = always

# Location of files uploaded
my.upload_location= uploads
# Maximum of 7mb per file
spring.servlet.multipart.max-file-size=7MB
spring.servlet.multipart.max-request-size=7MB


# --- Email Configuration ---
spring.mail.host=mail.scheveschilder.nl
spring.mail.port=465
spring.mail.username=${EMAIL_USERNAME}
spring.mail.password=${EMAIL_PASSWORD}

spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.ssl.enable=true
spring.mail.properties.mail.transport.protocol=smtp
spring.mail.properties.mail.smtp.ssl.checkserveridentity=false
spring.mail.properties.mail.debug=false
# ---  Set to false for production ---

# --- JWT Configuration ---
jwt.secret=${JWT_SECRET_KEY}